<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.com.common.mapper.CommonMapper">
	
	<!-- 공통코드 디테일 전체조회 -->
	<select id="commonSelectAll" parameterType="String" resultType="commonDTO">
		SELECT
		    comm_dtl_nm, 
		    comm_dtl_cd,
		    comm_note
		  FROM
		    common_detail
		    <![CDATA[
		    
		  WHERE
		    UPPER(comm_cd) =  UPPER(#{commCd}) 
		    
		    ]]>
		  ORDER BY
		    comm_dtl_cd
	</select>
	
	<!-- 거래처 전체조회 -->
	<select id="comSelectAll" parameterType="String" resultType="commonDTO">
		SELECT
		    entrprs_mber_id,		 --거래처 id
		    cmpny_nm,				 --거래처명
		    bizrno,			 		 --사업자등록번호
		    cxfc,				  	 --대표자
		    zip,					 --우편번호
		    area_no,				 --지역번호
		    entrprs_middle_telno,	 --중간번호
		    entrprs_end_telno,		 --끝번호
		    fxnum,					 --팩스
		    update_id,	
		    update_dt,
		    create_id,
		    create_dt,
		    del_yn
		  FROM 
		  	comtnentrprsmber
		  ORDER BY 
		  	create_dt desc
	</select>
	
	<!-- 로그인 로그 전체조회 -->
	<select id="loginLogSelectAll" parameterType="commonDTO" resultType="commonDTO">
		SELECT *
			FROM (
				SELECT T0.*, ROWNUM RNUM
				FROM (
				
				    SELECT
				        log.log_cd, 	-- 로그 코드
				        log.log_id,	 	-- 로그인 아이디
				        log.log_ip, 	-- 로그인 IP
				        log.state,		-- 성공 여부
				        TO_CHAR(log.create_dt, 'YYYY-MM-DD HH24:MI:SS') AS create_dt, -- 시:분:초 포함
				        mem.mber_id,
				        fn_get_memnm(mem.mber_id) AS mber_nm,
				        fn_get_deptnm(mem.mber_id) AS dept_nm,
				        fn_get_grademberid(mem.mber_id) AS grade_nm,
				        mem.lock_at
				    FROM 
				        login_log log
				    LEFT JOIN 
				        comtngnrlmber mem
				    ON log.log_id = mem.mber_id
				    WHERE 1=1
				    
				    <include refid="searchCriteria"/>
				         
				    ORDER BY log.create_dt DESC
		    
		    ) T0
		)
		WHERE RNUM BETWEEN #{firstIndex} + 1 AND #{firstIndex} + #{recordCountPerPage}
	</select>
	
	<!-- 로그인 로그 총갯수 -->
	<select id="loginLogSelectAllCnt" parameterType="commonDTO" resultType="Integer">
		select COUNT(log_cd) as cnt
		from login_log log
		where 1=1
		<include refid="searchCriteria"/>
	</select>
	
	<sql id="searchCriteria">
	
		<if test="searchState != null and searchState != ''">
	        AND log.state = #{searchState}
	    </if>
	
		<if test="searchCondition == 0">
	        AND log.log_id LIKE '%' || #{searchKeyword} || '%'
	    </if>
	    <if test="searchCondition == 1">
	        AND log.log_ip LIKE '%' || #{searchKeyword} || '%'
	    </if>
	
	    <if test="searchStartDt != null and searchStartDt != ''">
		    <![CDATA[ AND log.create_dt >= TO_DATE(#{searchStartDt}, 'YYYY-MM-DD') ]]>
		</if>
		<if test="searchStartDt == null or searchStartDt == ''">
		    <![CDATA[ AND log.create_dt >= TRUNC(SYSDATE) ]]>
		</if>	    
	
	    <if test="searchEndDt != null and searchEndDt != ''">
	        <![CDATA[ AND log.create_dt <= TO_DATE(#{searchEndDt}, 'YYYY-MM-DD')+0.99999 ]]>
	    </if>
	    <if test="searchEndDt == null or searchEndDt == ''">
		    <![CDATA[ AND log.create_dt <= TRUNC(SYSDATE)+0.99999 ]]>
		</if>
	</sql>
	
	<!-- 로그인 로그 등록 -->
	<insert id="loginLogInsert" parameterType="commonDTO">
		INSERT INTO 
		   login_log (
		      log_cd,
		      log_id,
		      log_ip,
		      state,
		      create_dt
		   )
		VALUES (
		   seq_log_cd.NEXTVAL,
		   #{logId},
		   #{logIp},
		   #{state},
		   SYSDATE
		)
	</insert>
	
	<!-- 홈 대시보드 건수 조회 (진행중인 프로젝트, 금일 예정 일정, 미완료 일지) -->
	<select id="homeInfo" parameterType="String">
	<![CDATA[
	select
	        NVL(TO_CHAR(go_time, 'HH24:MI'),'--:--') AS go_time, --오늘 출근시간
	        NVL(TO_CHAR(leave_time, 'HH24:MI'),'--:--') AS leave_time,	--오늘 퇴근시간
		    NVL((select count(*) from project project join project_mem pm on project.pr_cd=pm.pr_cd where project.state='A02' and pm.mber_id=m.mber_id),0) as project_cnt, --참여자로 등록된 프로젝트 갯수
		    NVL((select count(*) from todo todo where todo.state='A02' and mber_id=m.mber_id),0) as todo_cnt,	--금일 예정 일지 갯수
		    NVL((select count(*) from COMTNSCHDULINFO sch WHERE TRUNC(TO_DATE(SCHDUL_BGNDE, 'YYYYMMDDHH24MI')) <= TRUNC(SYSDATE) and TRUNC(TO_DATE(SCHDUL_ENDDE, 'YYYYMMDDHH24MI')) >= TRUNC(SYSDATE)),0) as sch_cnt --금일 일정 갯수
		from 
	    COMTNGNRLMBER m 
	left join
	    commute cmt
	on m.mber_id=cmt.mber_id
	where m.mber_id=#{mberId} and TO_DATE(commute_dt, 'YYYY-MM-DD') = TO_DATE(SYSDATE, 'YYYY-MM-DD')
	]]>
	
	</select>
	
	<!-- 홈 게시글 조회 -->
	<select id="bbsSelect" parameterType="String" resultType="commonDTO">
		SELECT * FROM (
		    SELECT 
		        ROWNUM RNUM, 		
		        bbs_id, -- 게시판코드	
		        ntt_id, -- 게시글번호
		        ntt_sj, -- 게시글제목
		        FRST_REGIST_PNTTM AS create_dt, -- 게시글 등록일
		        FRST_REGISTER_ID AS create_id, -- 게시글 작성자
		        fn_get_memnm(FRST_REGISTER_ID) AS mber_nm,
		        ANO_AT -- 공지여부
		    FROM (
		        SELECT * FROM comtnbbs 
		        ORDER BY ANO_AT ASC, FRST_REGIST_PNTTM DESC
		    )
		) <![CDATA[ WHERE RNUM <= 4 ]]>
	</select>
	
	<select id="companyInfo" resultType="CommonDTO">
		SELECT 
		   business_no,
		   comp_nm,
		   ceo_nm,
		   tel,
		   email,
		   tel_fax,
		   post,
		   addr,
		   addr_dtl,
		   TO_CHAR(start_time, 'HH24:MI:SS') AS start_time,
		   TO_CHAR(end_time, 'HH24:MI:SS') AS end_time  
		FROM
		   company
	</select>
	
	<!-- 홈 일정 조회 -->
	<select id="selectSchHome" parameterType="String" resultType="commonDTO">
		SELECT * FROM (
		    (SELECT 
		        SCHDUL_NM,
		        '일정' AS type_nm
		     FROM COMTNSCHDULINFO
		     WHERE 
		        <![CDATA[
		        TO_DATE(SUBSTR(SCHDUL_BGNDE, 1, 8), 'YYYYMMDD') <= TO_DATE(#{schDt}, 'YYYY-MM-DD') 
		        AND TO_DATE(SUBSTR(SCHDUL_ENDDE, 1, 8), 'YYYYMMDD') >= TO_DATE(#{schDt}, 'YYYY-MM-DD')
		        ]]>
		    )
		    UNION
		    (SELECT 
		        MTG_NM AS SCHDUL_NM,
		        '회의' AS type_nm
		     FROM COMTNMTGINFO
		     WHERE TO_CHAR(MTG_DE, 'YYYY-MM-DD') = #{schDt}
		    )
		) 
		<![CDATA[ where rownum<=3 ]]>		
	</select>
	
	<!-- 홈 일자별 건수 조회 -->
	<select id="selectSchCntHome" parameterType="String" resultType="commonDTO">
		<![CDATA[			
		
			WITH Calendar AS (
			    SELECT TO_CHAR(TO_DATE(#{schDt}, 'YYYY-MM-DD') + LEVEL - 1, 'YYYYMMDD') || '0000' AS CAL_DATE
			    FROM DUAL
			    CONNECT BY LEVEL <= LAST_DAY(TO_DATE(SUBSTR(#{schDt}, 1, 7), 'YYYY-MM')) 
			                       - TO_DATE(SUBSTR(#{schDt}, 1, 7) || '-01', 'YYYY-MM-DD') + 1
			)
			SELECT 
			    TO_NUMBER(TO_CHAR(TO_DATE(CAL.CAL_DATE, 'YYYYMMDDHH24MI'), 'DD')) AS listDt,
			    COUNT(SCHED.SCHDUL_BGNDE) AS listCnt
			FROM Calendar CAL
			LEFT JOIN COMTNSCHDULINFO SCHED 
			    ON TRUNC(TO_DATE(CAL.CAL_DATE, 'YYYYMMDDHH24MI')) 
			       BETWEEN TRUNC(TO_DATE(SCHED.SCHDUL_BGNDE, 'YYYYMMDDHH24MI')) 
			       AND TRUNC(TO_DATE(SCHED.SCHDUL_ENDDE, 'YYYYMMDDHH24MI'))
			GROUP BY TO_NUMBER(TO_CHAR(TO_DATE(CAL.CAL_DATE, 'YYYYMMDDHH24MI'), 'DD'))
			HAVING COUNT(SCHED.SCHDUL_BGNDE) > 0
			ORDER BY listDt
		]]>	
	</select>
	
	<!-- 회사시간등록 -->
	<update id="updateCompanyInfo" parameterType="commonDTO">
		UPDATE company
		SET 
		    tel_fax = #{telFax},
		    post = #{post},
		    addr = #{addr},
		    addr_dtl = #{addrDtl},
		    start_time = TO_DATE(#{startTime}, 'HH24:MI:SS'),
		    end_time = TO_DATE(#{endTime},'HH24:MI:SS')
		WHERE
			ceo_nm = (select mber_nm from comtngnrlmber where mber_id = #{mberId})	
	</update>
</mapper>